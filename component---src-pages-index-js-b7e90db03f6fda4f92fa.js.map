{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["BlogIndex","data","location","siteTitle","site","siteMetadata","title","description","posts","allMarkdownRemark","edges","concat","Fragment","style","borderWidth","borderTopStyle","borderImage","backgroundColor","borderBottom","marginLeft","marginRight","maxWidth","rhythm","padding","fontFamily","fontSize","fontWeight","margin","map","node","frontmatter","fields","slug","key","marginBottom","to","color","boxShadow","date","author","dangerouslySetInnerHTML","__html","excerpt","pageQuery"],"mappings":"2FAAA,0HAgHeA,UAzGG,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACnBC,EAAYF,EAAKG,KAAKC,aAAaC,MACnCC,EAAcN,EAAKG,KAAKC,aAAaE,YAErCC,EAAQP,EAAKQ,kBAAkBC,MAClCC,OAAOV,EAAKQ,kBAAkBC,OAC9BC,OAAOV,EAAKQ,kBAAkBC,OAEjC,OACE,kBAAC,IAAME,SAAP,KACE,yBACEC,MAAO,CACLC,YAAY,WACZC,eAAe,QACfC,YAAY,mEAGhB,4BAAQH,MAAO,CACbI,gBAAgB,UAChBC,aAAa,sBAEb,yBAAKL,MAAO,CACVM,WAAW,OACXC,YAAY,OACZC,SAAUC,YAAO,IACjBC,QAAYD,YAAO,IAAZ,IAAoBA,YAAO,EAAI,KAGtC,0BAAMT,MAAO,CACXW,WAAW,wBACXC,SAAS,OACTC,WAAW,MACXP,WAAW,OACXC,YAAY,OACZC,SAAUC,YAAO,MANnB,UAQA,uBACET,MAAO,CACLY,SAAS,OACTF,QAAQ,aACRI,OAAO,eAGRpB,KAKP,kBAAC,IAAD,CAAQL,SAAUA,EAAUI,MAAOH,GACjC,kBAAC,IAAD,CAAKG,MAAM,gBAEVE,EAAMoB,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNvB,EAAQuB,EAAKC,YAAYxB,OAASuB,EAAKE,OAAOC,KACpD,OACE,6BACEC,IAAKJ,EAAKE,OAAOC,KACjBnB,MAAO,CACLY,SAAS,OACTP,aAAa,oBACbK,QAAQ,aACRI,OAAO,eAGT,gCACE,wBACEd,MAAO,CACLqB,aAAcZ,YAAO,EAAI,KAG3B,kBAAC,OAAD,CACEa,GAAIN,EAAKE,OAAOC,KAChBnB,MAAO,CACLuB,MAAM,uBACNC,UAAU,SAGX/B,IAGL,2BACEO,MAAO,CACLuB,MAAM,6BAGPP,EAAKC,YAAYQ,KALpB,MAK6BT,EAAKC,YAAYS,SAGhD,6BACE,2BACE,uBACE1B,MAAO,CAAEW,WAAW,aAAeC,SAAS,QAC5Ce,wBAAyB,CACvBC,OAAQZ,EAAKC,YAAYvB,aAAesB,EAAKa,oBAe5D,IAAMC,EAAS","file":"component---src-pages-index-js-b7e90db03f6fda4f92fa.js","sourcesContent":["import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm } from \"../utils/typography\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n  const description = data.site.siteMetadata.description\n\n  const posts = data.allMarkdownRemark.edges\n    .concat(data.allMarkdownRemark.edges)\n    .concat(data.allMarkdownRemark.edges)\n\n  return (\n    <React.Fragment>\n      <div\n        style={{\n          borderWidth: `16px 0 0`,\n          borderTopStyle: `solid`,\n          borderImage: `linear-gradient(139deg, #fb8817, #ff4b01, #c12127, #e02aff) 3`\n        }}\n      />\n      <header style={{\n        backgroundColor: `#f9f9f9`,\n        borderBottom: `1px solid #e0e0e0`\n      }}>\n        <div style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(24),\n          padding: `${rhythm(0.5)} ${rhythm(3 / 4)}`\n        }}\n        >\n          <span style={{\n            fontFamily: `Montserrat,sans-serif`,\n            fontSize: `300%`,\n            fontWeight: `900`,\n            marginLeft: `auto`,\n            marginRight: `auto`,\n            maxWidth: rhythm(24),\n          }}>LAWISE</span>\n          <p\n            style={{\n              fontSize: `145%`,\n              padding: `0 0 20px 0`,\n              margin: `0 0 20px 0`\n            }}\n          >\n            {description}\n          </p>\n        </div>\n      </header>\n\n      <Layout location={location} title={siteTitle}>\n        <SEO title=\"LAWISE Blog\"/>\n\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug\n          return (\n            <article\n              key={node.fields.slug}\n              style={{\n                fontSize: `110%`,\n                borderBottom: `1px solid #f1f1f1`,\n                padding: `0 0 20px 0`,\n                margin: `0 0 20px 0`\n              }}\n            >\n              <header>\n                <h2\n                  style={{\n                    marginBottom: rhythm(1 / 4)\n                  }}\n                >\n                  <Link\n                    to={node.fields.slug}\n                    style={{\n                      color: `hsla(0, 0%, 0%, 0.9)`,\n                      boxShadow: `none`\n                    }}\n                  >\n                    {title}\n                  </Link>\n                </h2>\n                <small\n                  style={{\n                    color: `rgba(123, 123, 123, 0.9)`\n                  }}\n                >\n                  {node.frontmatter.date} â€¢ {node.frontmatter.author}\n                </small>\n              </header>\n              <div>\n                <p>\n                  <p\n                    style={{ fontFamily: `sans-serif`, fontSize: `110%` }}\n                    dangerouslySetInnerHTML={{\n                      __html: node.frontmatter.description || node.excerpt\n                    }}\n                  />\n                </p>\n              </div>\n            </article>\n          )\n        })}\n      </Layout>\n    </React.Fragment>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        description\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            author\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}