{"version":3,"sources":["webpack:///./src/templates/blog-post.js"],"names":["BlogPostTemplate","words","options","minutes","data","pageContext","location","post","markdownRemark","siteTitle","site","siteMetadata","title","previous","next","meta","name","content","frontmatter","description","excerpt","wordCount","Object","assign","wordsPerMinute","Math","ceil","toFixed","firstImageUrl","html","match","url","replace","push","Fragment","style","marginTop","rhythm","marginBottom","scale","display","textTransform","date","dangerouslySetInnerHTML","__html","author","flexWrap","justifyContent","listStyle","padding","to","fields","slug","rel","pageQuery"],"mappings":"4QAmIeA,UA9GU,SAAC,GAAqC,IAZ7CC,EAAOC,EAOrBC,EAKwBC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SACvCC,EAAOH,EAAKI,eACZC,EAAYL,EAAKM,KAAKC,aAAaC,MACjCC,EAAmBR,EAAnBQ,SAAUC,EAAST,EAATS,KAEZC,EAAO,CACX,CACEC,KAAM,cACNC,QAASV,EAAKW,YAAYC,aAAeZ,EAAKa,SAEhD,CAAEJ,KAAM,UAAWC,QAAS,WAC5B,CAAED,KAAM,WAAYC,QAASV,EAAKW,YAAYN,OAC9C,CACEI,KAAM,iBACNC,QAASV,EAAKW,YAAYC,aAAeZ,EAAKa,SAEhD,CACEJ,KAAM,sBACNC,QAASV,EAAKW,YAAYC,aAAeZ,EAAKa,SAEhD,CAAEJ,KAAM,0BAA2BC,QAAS,sBAC5C,CACED,KAAM,yBACNC,SAnCYhB,EAmCMM,EAAKc,UAAUpB,MA5BnCE,EAAUF,EANKqB,OAAOC,OACpB,CACEC,eAAgB,KAElBtB,GAEyBsB,eAEtBC,KAAKC,KAAKvB,EAAQwB,QAAQ,OA+B7BC,EAAgBrB,EAAKsB,KAAKC,MADnB,sBAEX,GAAIF,EAAe,CACjB,IAAMG,EAGA,wBACHH,EAAc,GAAGI,QAAQ,SAAU,IACtCjB,EAAKkB,KAAK,CAAEjB,KAAM,WAAYC,QAASc,IACvChB,EAAKkB,KAAK,CAAEjB,KAAM,gBAAiBC,QAASc,IAG9C,OACE,kBAAC,IAAMG,SAAP,KACE,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAQ5B,SAAUA,EAAUM,MAAOH,GACjC,kBAAC,IAAD,CACEU,YAAaZ,EAAKW,YAAYC,aAAeZ,EAAKa,QAClDL,KAAMA,EACNH,MAAOL,EAAKW,YAAYN,QAE1B,iCACE,6BACE,wBACEuB,MAAO,CACLC,UAAWC,YAAO,GAClBC,aAAc,IAGf/B,EAAKW,YAAYN,OAEpB,uBACEuB,MAAK,iBACAI,aAAM,IADN,CAEHC,QAAQ,QACRF,aAAcD,YAAO,MAGvB,0BAAMF,MAAO,CAAEM,cAAc,eAC1BlC,EAAKW,YAAYwB,QAIxB,6BAASC,wBAAyB,CAAEC,OAAQrC,EAAKsB,QACjD,wBACEM,MAAO,CACLG,aAAcD,YAAO,MAGzB,kBAAC,IAAD,CAAKQ,OAAQtC,EAAKW,YAAY2B,UAGhC,6BACE,wBACEV,MAAO,CACLK,QAAQ,OACRM,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,4BACGpC,GACC,kBAAC,OAAD,CAAMqC,GAAIrC,EAASsC,OAAOC,KAAMC,IAAI,QAApC,KACKxC,EAASK,YAAYN,QAI9B,4BACGE,GACC,kBAAC,OAAD,CAAMoC,GAAIpC,EAAKqC,OAAOC,KAAMC,IAAI,QAC7BvC,EAAKI,YAAYN,MADpB,YAcT,IAAM0C,EAAS","file":"component---src-templates-blog-post-js-36a4bd6c5dfd20fcb7e8.js","sourcesContent":["import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm, scale } from \"../utils/typography\"\nimport Header from \"../components/header\"\n\nconst readTime = (words, options) => {\n  const defaults = Object.assign(\n      {\n        wordsPerMinute: 225,\n      },\n      options\n    ),\n    minutes = words / defaults.wordsPerMinute\n\n  return Math.ceil(minutes.toFixed(2))\n}\n\nconst BlogPostTemplate = ({ data, pageContext, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata.title\n  const { previous, next } = pageContext\n\n  const meta = [\n    {\n      name: \"description\",\n      content: post.frontmatter.description || post.excerpt,\n    },\n    { name: \"og:type\", content: \"article\" },\n    { name: \"og:title\", content: post.frontmatter.title },\n    {\n      name: \"og:description\",\n      content: post.frontmatter.description || post.excerpt,\n    },\n    {\n      name: \"twitter:description\",\n      content: post.frontmatter.description || post.excerpt,\n    },\n    { name: \"twitter:label_read_time\", content: \"Minutos de lectura\" },\n    {\n      name: \"twitter:data_read_time\",\n      content: readTime(post.wordCount.words),\n    },\n  ]\n\n  const re = /\\\"(\\/static.*?)\\\"/g\n  let firstImageUrl = post.html.match(re)\n  if (firstImageUrl) {\n    const url = `${\n      process.env.NODE_ENV === \"development\"\n        ? \"http://localhost:8000\"\n        : \"https://www.lawise.es\"\n    }${firstImageUrl[0].replace(/['\"]+/g, \"\")}`\n    meta.push({ name: \"og:image\", content: url })\n    meta.push({ name: \"twitter:image\", content: url })\n  }\n\n  return (\n    <React.Fragment>\n      <Header />\n      <Layout location={location} title={siteTitle}>\n        <SEO\n          description={post.frontmatter.description || post.excerpt}\n          meta={meta}\n          title={post.frontmatter.title}\n        />\n        <article>\n          <div>\n            <h1\n              style={{\n                marginTop: rhythm(1),\n                marginBottom: 0,\n              }}\n            >\n              {post.frontmatter.title}\n            </h1>\n            <p\n              style={{\n                ...scale(-1 / 5),\n                display: `block`,\n                marginBottom: rhythm(1),\n              }}\n            >\n              <span style={{ textTransform: `capitalize` }}>\n                {post.frontmatter.date}\n              </span>\n            </p>\n          </div>\n          <section dangerouslySetInnerHTML={{ __html: post.html }} />\n          <hr\n            style={{\n              marginBottom: rhythm(1),\n            }}\n          />\n          <Bio author={post.frontmatter.author} />\n        </article>\n\n        <nav>\n          <ul\n            style={{\n              display: `flex`,\n              flexWrap: `wrap`,\n              justifyContent: `space-between`,\n              listStyle: `none`,\n              padding: 0,\n            }}\n          >\n            <li>\n              {previous && (\n                <Link to={previous.fields.slug} rel=\"prev\">\n                  ← {previous.frontmatter.title}\n                </Link>\n              )}\n            </li>\n            <li>\n              {next && (\n                <Link to={next.fields.slug} rel=\"next\">\n                  {next.frontmatter.title} →\n                </Link>\n              )}\n            </li>\n          </ul>\n        </nav>\n      </Layout>\n    </React.Fragment>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        author\n        date(formatString: \"MMMM DD, YYYY\", locale: \"es\")\n        description\n      }\n      wordCount {\n        words\n      }\n    }\n  }\n`\n"],"sourceRoot":""}